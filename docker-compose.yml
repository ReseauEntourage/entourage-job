version: '3.8'
services:
  api:
    container_name: api
    build:
      context: ./
      target: dev
    volumes:
      - .:/src
    command: npm run dev
    ports:
      - '3002:3002'
    environment:
      NODE_ENV: development
      DEBUG: nodejs-docker-express:*
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: linkedout
      DB_PASSWORD: linkedout
      DB_NAME: linkedout
    depends_on:
      - db
      - cache
    links:
      - db
      - cache
  worker:
    container_name: worker
    build:
      context: ./
      target: dev
    volumes:
      - .:/src
    command: npm run dev-mainWorker
    ports:
      - '3003:3003'
    environment:
      NODE_ENV: development
      DEBUG: nodejs-docker-express:*
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: linkedout
      DB_PASSWORD: linkedout
      DB_NAME: linkedout
    depends_on:
      - db
      - cache
    links:
      - db
      - cache
  db:
    container_name: db
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=linkedout
      - POSTGRES_PASSWORD=linkedout
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
volumes:
  db:
    driver: local
  cache:
    driver: local
